@use './common/var.scss' as *;
@use './mixins/main.scss';
@use './mixins/button.scss';
@use './common/transition' as *;
@use 'sass:map';

.sui-button {
  --padding-medium: 0 15px;
  --padding-mini: 0 11px;
  --padding-small: 0 15px;
  --padding-large: 0 19px;
  --hover-opacity: 0.16;
  --active-opacity: 0.32;

  $status-normal: ':not(.is-disabled):not(.is-loading)';
  $ns: '.sui-button';

  user-select: none;
  position: relative;
  display: inline-block;
  box-sizing: border-box;
  color: map.get($colors-text, '2');
  font-weight: 400;
  font-size: map.get($sizes-text, 'body-3');
  line-height: $line-height-base;
  white-space: nowrap;
  outline: none;
  cursor: pointer;
  transition: all map.get($durations, '1') map.get($timings, 'linear');
  -webkit-appearance: none;
  border: 1px solid;
  vertical-align: middle;

  &:active {
    transition: none;
  }

  &.is-block {
    display: block;
    width: 100%;
  }
  
  &-icon {
    vertical-align: 1.5px;
    margin-right: 8px;
    line-height: $line-height-base;
  }
  &.is-icon-only {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    #{$ns}-icon {
      margin-right: 0;
    }
  }

  // size
  @include button.use-size('medium');
  @include button.use-size('large');
  @include button.use-size('small');
  @include button.use-size('mini');

  //types
  @include button.use-button-types('default');
  @include button.use-button-types('primary');
  @include button.use-button-types('outlined');
  @include button.use-button-types('text');

  // shapes
  @include button.use-shape('rounded');
  @include button.use-shape('square');
  @include button.use-shape('circle');

  &.is-ghost#{$status-normal} {
    background-color: transparent;
    color: $color-white;
    border-color: $color-white;

    &:hover {
      background-color: rgba($color-white, var(--hover-opacity));
      border-color: $color-white;
    }
    &:focus {
      background-color: rgba($color-white, var(--hover-opacity));
      border-color: $color-white;
      @include main.use-ring($color-white);
    }
    &:active {
      border-color: $color-white;
      background-color: rgba($color-white, var(--active-opacity));
    }
  }

  // status
  &.is-loading {
    cursor: default;
    position: relative;

    &::before {
      content: "";
      right: -1px;
      bottom: -1px;
      top: -1px;
      left: -1px;
      position: absolute;
      background-color: $color-white;
      opacity: .4;
    }
    #{$ns}-icon {
      svg {
        animation: rotate 2s linear infinite;
        transform-origin: center;
      }
    }
  }
}
