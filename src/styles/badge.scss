@use 'sass:map';
@use 'sass:math';
@use 'common/var.scss' as *;

@mixin badge($type) {
  &.sui-badge--#{$type} {
    .sui-badge__content {
      background-color: var(--sui-#{$type}-6);
      color: var(--sui-white);
    }
  }
}

.sui-badge {
  $ns: '.sui-badge';
  --size: 20px;
  --size-dot: 10px;
  --padding: 0 6px;

  display: inline-block;
  position: relative;
  vertical-align: middle;
  box-sizing: border-box;

  &__content {
    position: absolute;
    transform: translate(50%,-50%);
    transform-origin: 100% 0%;
    right: 2px;
    top: 2px;
    background-color: var(--sui-fill-2);
    font-size: map.get($sizes-text, 'caption');
    color: var(--sui-text-1);
    height: var(--size);
    min-width: var(--size);
    border-radius: map.get($sizes-radius, 'rounded');
    padding: var(--padding);
    text-align: center;
    line-height: calc(var(--size) - 2px);
    box-sizing: border-box;
    box-shadow: 0 0 0 2px var(--sui-white);

    &.is-dot {
      height: var(--size-dot);
      width: var(--size-dot);
      min-width: unset;
      padding: 0;
    }
  }

  @each $type in ('primary', 'warning', 'success', 'error') {
    @include badge($type);
  }
}

.zoom-in-center-enter-from,
.zoom-in-center-leave-to {
  transform: scale(0);
}

.zoom-in-center-enter-active,
.zoom-in-center-leave-active {
  transition: all map.get($durations, '3') map.get($timings, 'overshoot');
}