@use 'sass:map';
@use '../common/var.scss' as *;
@use './main.scss';

@mixin default-button($type) {
  $base-color: map.get($colors, $type, '6');
  $fill-color: map.get($colors, $type, '1');
  background-color: $color-white;
  border-color: map.get($colors-line, '2');

  &:not(.is-disabled):not(.is-loading) {
    &:hover {
      color: $base-color;
      border-color: map.get($colors, $type, '2');
      background-color: $fill-color
    }
    &:focus-visible {
      @include main.use-ring($base-color);
      color: $base-color;
      border-color: $base-color;
      background-color: $fill-color;
    }
    &:active {
      color: $base-color;
      border-color: $base-color;
      background-color: map.get($colors, $type, '1');
    }
  }
}

@mixin primary-button($type) {
  $light-color: map.get($colors, $type, '5');
  $dark-color: map.get($colors, $type, '7');
  $base-color: map.get($colors, $type, '6');
  $disabled-color: map.get($colors, $type, '3');

  background-color: $base-color;
  color: $color-white;
  border-color: $base-color;

  &:not(.is-disabled):not(.is-loading) {
    &:hover {
      background-color: $light-color;
      border-color: $light-color;
      color: $color-white;
    }
    &:focus-visible {
      @include main.use-ring($base-color);
      background-color: $light-color;
      border-color: $light-color;
      color: $color-white;
    }
    &:active {
      background-color: $dark-color;
      border-color: $dark-color;
      color: $color-white;
    }
  }
  &.is-disabled {
    background-color: $disabled-color;
    border-color: $disabled-color;
    color: $color-white;
  }
}

@mixin outlined-button($type) {
  $color: map.get($colors, $type, '6');
  $light-color: map.get($colors, $type, '5');
  $dark-color: map.get($colors, $type, '7');
  background-color: transparent;
  color: $color;
  border-color: $color;

  &:not(.is-disabled):not(.is-loading) {
    &:hover {
      color: $light-color;
      border-color: $light-color;
      background-color: transparent;
    }
    &:focus-visible {
      color: $light-color;
      border-color: $light-color;
      @include main.use-ring($light-color);
    }
    &:active {
      color: $dark-color;
      border-color: $dark-color;
    }
  }
}

@mixin text-button($type) {
  $bg-color: map.get($colors-fill, '1');
  $bg-dark-color: map.get($colors-fill, '2');
  $color: map.get($colors, $type, '6');
  $light-color: map.get($colors, $type, '5');

  background-color: transparent;
  border-color: transparent;
  color: $color;

  &:not(.is-disabled):not(.is-loading) {
    &:hover {
      color: $light-color;
      background-color: $bg-color;
      border-color: $bg-color;
    }
    &:focus-visible {
      @include main.use-ring($bg-dark-color);
      border-color: transparent;
      background-color: transparent;
    }
    &:active {
      color: map.get($colors, $type, '7');
      background-color: $bg-dark-color;
      border-color: $bg-dark-color;
    }
  }
}

@mixin use-size($size) {
  $height: map.get($sizes-component, $size);

  height: $height;
  padding: var(--padding-#{$size});
  @if ($size == 'mini') {
    font-size: map.get($sizes-text, 'body-2');
  }
}
