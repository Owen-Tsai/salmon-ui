@import 'common/variables/alert.var.styl'
@import 'common/var.styl'
@import 'common/mixins/mixin.common.styl'

.sui-alert {
  padding alert-padding--y alert-padding--x
  border-radius border-radius--normal
  box-sizing border-box
  font-size font-size--text.medium
  transition all transition--slow
  opacity 1

  for type, colors in typesMap {
    &--{type} {
      border: 1px solid colors[4]
      background-color: colors[4]
      color: color--white

      & ^[0]__close-btn {
        &:focus {
          background-color colors[2]
          ring(color--white)
        }
      }
    }
  }

  &--warning {
    color: color--text
    & ^[0]__close-btn {
      &:focus {
        ring(color--text)
      }
    }
  }

  &__wrapper {
    display flex
    align-items center
    position relative
    padding-right 24px
    box-sizing border-box

    ^[0]__icon {
      font-size 24px
      margin-right 16px

      &.is-large {
        font-size 32px
      }
    }
    ^[0]__title {
      font-weight 700
      margin-bottom 4px
      * {
        vertical-align middle
      }
    }
    ^[0]__message {
      margin 0
    }
  }

  &__prefix {
    display inline-flex
    align-items center
    justify-content center
  }

  &__close-btn {
    background none
    border none
    position absolute
    right -4px
    cursor pointer
    top 2px
    color inherit
    border-radius 50%
    font-size: font-size--icon.medium
    padding 2px
    display inline-flex
    align-items center
    justify-content center
    transition all .1s
  }

  // is outlined
  &.is-outlined {
    for type, colors in typesMap {
      &^[0]--{type} {
        border: 1px solid colors[4]
        background-color: colors[0]
        color: colors[4]

        & ^[0]__close-btn {
          &:focus {
            background-color colors[1]
            ring(colors[4])
          }
        }
      }
    }
  }

  &.is-closing {
    height: 0 !important
    margin: 0
    padding-top: 0
    padding-bottom: 0
    transform-origin: 50% 0
    opacity 0
    transition: all transition--slow ease-in-out

    * {
      opacity 0
      transition opacity transition--slow ease-in-out
    }
  }
}

@keyframes slideUpIn {
  0% {
    transform: scaleY(0);
    transform-origin: 0 0;
    opacity: 0;
  }
  100% {
    transform: scaleY(1);
    transform-origin: 0 0;
    opacity: 1;
  }
}

@keyframes slideUpOut {
  0% {
    transform: scaleY(1);
    transform-origin: 0 0;
    opacity: 1;
  }
  100% {
    transform: scaleY(0);
    transform-origin: 0 0;
    opacity: 0;
  }
}

.slide-up-leave {
  animation: slideUpOut transition--slow ease-in-out
  animation-fill-mode: both
}
