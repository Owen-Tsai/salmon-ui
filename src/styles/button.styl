@import 'common/var.styl'
@import 'common/mixins/main.styl'
@import 'common/mixins/button.styl'

.sui-button {
  size--lg = 48px
  size = 40px
  size--sm = 32px
  padding = 0 15px
  padding--sm = 0 12px
  opacity--hover = 0.24
  opacity--active = 0.32
  color--ghost = colors--neutral[0]
  color--ghost-hover = color--white
  color--ghost-active = colors--neutral[1]
  $normal = ':not(.is-disabled):not(.is-loading)'

  // styles
  use-inline-flex(false)
  position relative
  line-height 1
  white-space nowrap
  cursor pointer
  border 1px solid color--border
  background-color color--white
  padding padding
  min-height size
  font-size: font-size--text.medium
  vertical-align middle
  box-sizing border-box
  border-radius: border-radius--normal
  color color--text
  font-weight 500
  transition all transition--fast

  &::active {
    box-shadow none !important
  }

  &__label {
    display inline-block
    line-height 0
  }
  .sui-icon {
    vertical-align middle
    font-size font-size--icon.medium
    line-height: 1
  }

  &.has-icon &__label {
    margin-left 2px
  }

  .loader {
    margin-right 2px
  }

  make-button(colors--primary)

  &.is-danger {
    make-button(colors--error)
  }
  &.is-ghost{$normal} {
    border-color: color--white
    color: color--white
    background-color: transparent
    &:hover {
      background-color: rgba(color--white, opacity--hover)
    }
    &:focus {
      ring(color--white)
      background-color: rgba(color--white, opacity--hover)
    }
    &:active {
      background-color: rgba(color--white, opacity--active)
    }
  }

  // types
  &--primary {
    make-primary-button(colors--primary)

    &.is-danger {
      make-primary-button(colors--error)
    }
    &.is-ghost{$normal} {
      background-color: color--ghost
      color: color--primary
      border-color: transparent

      &:hover {
        background-color: color--ghost-hover
        color: color--primary
      }
      &:focus {
        background-color: color--ghost-hover
        color: color--primary
      }
      &:active {
        background-color: color--ghost-active
        color: color--primary
      }
    }
  }

  &--outlined {
    make-outlined-button(colors--primary)

    &.is-danger {
      make-outlined-button(colors--error)
    }
    &.is-ghost{$normal} {
      border-color: color--white
      &:hover {
        background-color: color--ghost-hover
        color: color--primary
      }
      &:active {
        background-color: color--ghost-active
      }
    }
  }

  &--text {
    make-text-button(colors--primary)

    &.is-danger {
      make-text-button(colors--error)
    }
    &.is-ghost{$normal} {
      color: color--white
    }
  }

  // shapes
  ^[0]&--rounded {
    border-radius size--lg
  }
  ^[0]&--circle {
    border-radius 50%
    padding ((size - font-size--icon.medium) / 2)
  }

  // sizes
  &^[0]--large {
    min-height size--lg
    font-size: font-size--text.large

    .sui-icon {
      font-size font-size--icon.medium
    }

    &^[0]--circle {
      padding ((size--lg - font-size--icon.medium) / 2)
    }
  }
  &^[0]--small {
    min-height size--sm
    padding padding--sm

    &^[0]--circle {
      padding ((size--sm - font-size--icon.small) / 2)
    }
  }

  // disabled
  &.is-disabled {
    background-color color--surface
    border-color color--border
    color color--disabled
    cursor not-allowed
  }

  // loading
  &.is-loading {
    cursor default
    &::before {
      position absolute
      content ''
      top -1px
      bottom -1px
      left -1px
      right -1px
      background-color rgba(color--white, 0.6)
    }
  }
}
