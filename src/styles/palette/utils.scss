@use 'sass:math';
@use 'sass:list';
@use 'sass:meta';

@function hsv-to-hsl($h, $s: 0, $v: 0) {
  @if meta.type-of($h) == 'list' {
    $v: list.nth($h, 3);
    $s: list.nth($h, 2);
    $h: list.nth($h, 1);
  }

  @if math.unit($h) == 'deg' {
    $h: 3.1415 * 2 * ($h / 360deg);
  }
  @if math.unit($s) == '%' {
    $s: 0 + ($s / 100%);
  }
  @if math.unit($v) == '%' {
    $v: 0 + ($v / 100%);
  }

  $ss: $s * $v;
  $ll: (2 - $s) * $v;

  @if ($ll == 2 or $ll == 0) {
    $ss: 0;
  } @else if $ll <= 1 {
    $ss: $ss / $ll;
  } @else {
    $ss: $ss / (2 - $ll);
  }

  $ll: $ll / 2;

  @return 360deg * $h / (3.1415 * 2), math.percentage(math.max(0, math.min(1, $ss))), math.percentage(math.max(0, math.min(1, $ll)));
}

@function hsl-to-hsv($h, $ss: 0, $ll: 0) {
  @if meta.type-of($h) == 'list' {
    $ll: list.nth($h, 3);
    $ss: list.nth($h, 2);
    $h: list.nth($h, 1);
  } @else if meta.type-of($h) == 'color' {
    $ll: lightness($h);
    $ss: saturation($h);
    $h: hue($h);
  }

  @if math.unit($h) == 'deg' {
    $h: 3.1415 * 2 * ($h / 360deg);
  }
  @if math.unit($ss) == '%' {
    $ss: 0 + ($ss / 100%);
  }
  @if math.unit($ll) == '%' {
    $ll: 0 + ($ll / 100%);
  }

  $ll: $ll * 2;

  @if $ll <= 1 {
    $ss: $ss * $ll;
  } @else {
    $ss: $ss * (2 - $ll);
  }

  $v: ($ll + $ss) / 2;

  $s: 0;
  @if $ll + $ss != 0 {
    $s: (2 * $ss) / ($ll + $ss);
  }

  @return 360deg * $h / (3.1415 * 2), math.percentage(math.max(0, math.min(1, $s))), math.percentage(math.max(0, math.min(1, $v)));
}

@function hsv-to-color($h, $s: 0, $v: 0) {
  $hsl: hsv-to-hsl($h, $s, $v);
  @return hsl(list.nth($hsl, 1), list.nth($hsl, 2), list.nth($hsl, 3));
}